version: '2.1'

services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-volume:/var/lib/grafana
    depends_on:
      - cassandra
  zookeeper: 
    image: bitnami/zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    networks:
      - app-tier

  kafka:
    image: bitnami/kafka:3.4.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ENABLE_KRAFT: "no"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:9092
    networks:
      - app-tier

  cassandra:
    container_name: cassandra
    hostname: cassandra
    image: bitnami/cassandra:latest
    networks:
      - app-tier
    ports:
      - 9042:9042
    volumes:
      - cassandra_data:/bitnami
    restart: on-failure

  mqtt-connector:
    container_name: mqtt-connector
    build: ./mqtt-connector
    networks:
      - app-tier
    ports:
      - 8000:8000
    depends_on:
      - kafka
    restart: on-failure

  kafka-streams-app:
    container_name: kafka-streams-app
    build: ./kafka-streams-app
    depends_on:
      - kafka
      - cassandra
    networks:
      - app-tier
    restart: on-failure

volumes:
  cassandra_data:
    driver: local

networks:
  app-tier:
    driver: bridge
